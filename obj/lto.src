	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_randomIntRange
_randomIntRange:
	call	__frameset0
	call	_rand
	push	hl
	pop	de
	ld	hl, 1
	ld	bc, (ix + 6)
	or	a, a
	sbc	hl, bc
	push	hl
	pop	iy
	ld	bc, (ix + 9)
	add	iy, bc
	ex	de, hl
	lea	bc, iy
	call	__irems
	ld	de, (ix + 6)
	add	hl, de
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_shuffle_deck
_shuffle_deck:
	ld	hl, -19
	call	__frameset
	ld	iy, (ix + 6)
	ld	bc, 7
	lea	hl, ix - 7
	ld	(ix - 13), hl
	ld	de, 364
	lea	hl, iy
	add	hl, de
	ld	de, (hl)
	push	de
	pop	hl
	call	__imulu
	push	de
	pop	bc
	push	hl
	pop	de
	add	iy, de
	lea	hl, iy - 7
	ld	(ix - 10), hl
	ld	de, 2
BB1_1:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB1_3
	push	bc
	pop	hl
	dec	hl
	ld	(ix - 16), hl
	ld	(ix - 19), bc
	call	_rand
	ld	bc, (ix - 19)
	call	__irems
	ld	(ix - 19), hl
	ld	de, (ix - 13)
	ld	hl, (ix - 10)
	ld	iy, 7
	lea	bc, iy
	ldir
	ld	hl, (ix - 19)
	lea	bc, iy
	call	__imulu
	push	hl
	pop	de
	ld	iy, (ix + 6)
	add	iy, de
	ld	de, (ix - 10)
	lea	hl, iy
	ld	bc, 7
	ldir
	lea	de, iy
	ld	hl, (ix - 13)
	ld	bc, 7
	ldir
	ld	de, 2
	ld	iy, (ix - 10)
	lea	iy, iy - 7
	ld	(ix - 10), iy
	ld	bc, (ix - 16)
	jr	BB1_1
BB1_3:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_create_deck
_create_deck:
	ld	hl, -24
	call	__frameset
	ld	iy, (ix + 6)
	xor	a, a
	ld	hl, -64
	ld	(ix - 6), hl
	sbc	hl, hl
	lea	bc, iy + 5
	ld	iy, 13
	ld	(ix - 9), bc
	ld	c, iyl
	ld	de, -13
	ld	(ix - 3), de
BB2_1:
	ld	(ix - 13), a
	ld	b, a
	call	__bdivu
	ld	d, a
	ld	(ix - 12), de
	ld	(ix - 19), hl
	lea	bc, iy
	call	__idivu
	lea	de, iy
	push	hl
	pop	iy
	ld	bc, 104
	call	__imulu
	ld	bc, (ix - 6)
	ld	a, c
	sub	a, l
	lea	hl, iy
	push	de
	pop	bc
	call	__imulu
	push	hl
	pop	bc
	ld	hl, -12
	or	a, a
	sbc	hl, bc
	ld	(ix - 16), hl
	ld	bc, (ix - 3)
	push	bc
	pop	iy
	add	iy, de
	push	bc
	pop	hl
	ld	de, 39
	or	a, a
	sbc	hl, de
	jp	z, BB2_17
	ld	(ix - 24), a
	ld	(ix - 23), iy
	ld	hl, (ix - 12)
	mlt	hl
	ld	d, (ix - 13)
	ld	a, d
	add	a, l
	ld	e, a
	add	a, -11
	ld	iyl, a
	ld	(ix - 20), e
	ld	a, e
	cp	a, 8
	jr	nc, BB2_4
	ld	a, d
	add	a, l
	add	a, 50
	jr	BB2_8
BB2_4:
	push	bc
	pop	hl
	ld	de, (ix - 16)
	add	hl, de
	ld	de, 17
	add	hl, de
	ld	de, 3
	or	a, a
	sbc	hl, de
	jr	nc, BB2_6
	ld	hl, 5327444
	ld	c, (ix - 24)
	call	__ishru
	ld	a, l
	jr	BB2_8
BB2_6:
	ld	a, iyl
	or	a, a
	ld	a, 75
	jr	z, BB2_8
	ld	a, 65
BB2_8:
	ld	iy, (ix - 9)
	ld	(iy - 5), a
	ld	hl, (ix - 23)
	ld	de, 13
	or	a, a
	sbc	hl, de
	ld	a, 83
	jr	c, BB2_12
	ld	hl, (ix - 3)
	ld	de, 13
	or	a, a
	sbc	hl, de
	ld	a, 72
	jr	c, BB2_12
	ld	hl, (ix - 3)
	ld	de, -13
	add	hl, de
	ld	de, 13
	or	a, a
	sbc	hl, de
	ld	a, 67
	jr	c, BB2_12
	ld	a, 68
BB2_12:
	ld	iy, (ix - 9)
	ld	(iy - 4), a
	ld	hl, (ix - 3)
	ld	de, (ix - 16)
	add	hl, de
	push	hl
	pop	iy
	ld	de, 27
	add	iy, de
	ld	de, -13
	or	a, a
	sbc	hl, de
	ld	hl, 11
	jr	z, BB2_14
	ld	hl, 10
BB2_14:
	ld	a, (ix - 20)
	cp	a, 8
	lea	bc, iy
	jr	c, BB2_16
	push	hl
	pop	bc
BB2_16:
	ld	iy, (ix - 9)
	ld	(iy - 3), bc
	ld	(iy), 0
	ld	(iy + 1), 0
	lea	de, iy
	ld	hl, (ix - 19)
	inc	hl
	ld	bc, (ix - 3)
	inc	bc
	ld	(ix - 3), bc
	ld	a, (ix - 13)
	inc	a
	ld	bc, 8
	ld	iy, (ix - 6)
	add	iy, bc
	ld	(ix - 6), iy
	push	de
	pop	iy
	lea	iy, iy + 7
	ld	(ix - 9), iy
	ld	de, (ix - 12)
	ld	c, 13
	ld	iy, 13
	jp	BB2_1
BB2_17:
	ld	de, 364
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	add	iy, de
	ld	de, 52
	ld	(iy), de
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_print_card
_print_card:
	ld	hl, -3
	call	__frameset
	ld	hl, (ix + 15)
	ld	de, (ix + 18)
	push	de
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	l, (ix + 11)
	bit	0, l
	jr	nz, BB3_3
	ld	a, (ix + 12)
	or	a, a
	jr	nz, BB3_3
	ld	a, (ix + 6)
	ld	l, a
	push	hl
	call	_gfx_PrintChar
	pop	hl
	ld	l, (ix + 7)
	jr	BB3_8
BB3_3:
	ld	c, 62
	ld	e, 60
	ld	a, l
	xor	a, 1
	bit	0, a
	ld	l, c
	jr	nz, BB3_5
	ld	l, e
BB3_5:
	ld	(ix - 3), hl
	bit	0, a
	jr	nz, BB3_7
	ld	e, c
BB3_7:
	push	de
	call	_gfx_PrintChar
	pop	hl
	ld	a, (ix + 6)
	ld	l, a
	push	hl
	call	_gfx_PrintChar
	pop	hl
	ld	l, (ix + 7)
	push	hl
	call	_gfx_PrintChar
	pop	hl
	ld	hl, (ix - 3)
BB3_8:
	push	hl
	call	_gfx_PrintChar
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_display_hand
_display_hand:
	ld	hl, -15
	call	__frameset
	ld	iy, (ix + 6)
	ld	bc, 0
	lea	de, iy + 9
	ld	(ix - 3), de
	ld	(ix - 6), bc
BB4_1:
	ld	de, (iy + 3)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB4_6
	ld	(ix - 9), bc
	ld	iy, (ix - 3)
	bit	0, (iy + 5)
	jr	nz, BB4_4
	bit	0, (iy + 6)
	ld	hl, 200
	ld	de, 80
	jr	z, BB4_5
BB4_4:
	ld	hl, 184
	ld	de, 72
BB4_5:
	ld	(ix - 12), hl
	ld	hl, (ix - 6)
	add	hl, de
	ld	(ix - 15), hl
	push	hl
	push	hl
	push	hl
	push	hl
	push	hl
	lea	hl, iy
	ld	(ix - 3), hl
	ld	iy, 0
	add	iy, sp
	lea	de, iy
	ld	bc, 7
	ldir
	ld	hl, (ix - 15)
	ld	(iy + 9), hl
	ld	hl, (ix - 12)
	ld	(iy + 12), hl
	call	_print_card
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, (ix - 9)
	inc	bc
	ld	de, 32
	ld	hl, (ix - 6)
	add	hl, de
	ld	(ix - 6), hl
	ld	iy, (ix - 3)
	lea	iy, iy + 7
	ld	(ix - 3), iy
	ld	iy, (ix + 6)
	jp	BB4_1
BB4_6:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_draw_cards_to_hand
_draw_cards_to_hand:
	ld	hl, -9
	call	__frameset
	ld	de, (ix + 9)
	ld	bc, 1
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB5_2
	ld	de, 0
BB5_2:
	ld	iy, (ix + 6)
	lea	hl, iy + 11
	ld	(ix - 6), hl
	or	a, a
	sbc	hl, hl
	push	de
	pop	iy
	push	hl
	pop	bc
BB5_3:
	push	bc
	pop	hl
	lea	de, iy
	or	a, a
	sbc	hl, de
	jp	z, BB5_14
	ld	(ix - 9), bc
	lea	bc, iy
	ld	(ix - 3), bc
BB5_5:
	ld	hl, (ix + 15)
	ld	hl, (hl)
	ld	de, 52
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB5_7
	or	a, a
	sbc	hl, hl
	ld	iy, (ix + 15)
	ld	(iy), hl
	ld	hl, (ix + 12)
	push	hl
	call	_shuffle_deck
	pop	hl
BB5_7:
	ld	hl, (ix + 6)
	ld	de, (hl)
	push	de
	pop	hl
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB5_9
	ld	de, 0
BB5_9:
	ld	iy, (ix - 6)
BB5_10:
	ld	bc, (ix - 3)
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB5_5
	ld	hl, (iy)
	ld	bc, -1
	or	a, a
	sbc	hl, bc
	jr	z, BB5_13
	lea	iy, iy + 7
	dec	de
	jr	BB5_10
BB5_13:
	lea	de, iy - 2
	ld	hl, (ix + 15)
	push	hl
	pop	iy
	ld	hl, (iy)
	push	hl
	pop	bc
	inc	bc
	ld	(iy), bc
	ld	bc, 7
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix + 12)
	add	hl, bc
	ld	bc, 7
	ldir
	ld	iy, (ix - 3)
	ld	bc, (ix - 9)
	inc	bc
	jp	BB5_3
BB5_14:
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	hl, (iy + 3)
	ld	de, (ix + 9)
	add	hl, de
	ld	(iy + 3), hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -476
	call	__frameset
	ld	bc, -441
	lea	iy, ix
	add	iy, bc
	ld	bc, -447
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	ld	hl, 0
	ld	de, 11
	push	ix
	ld	bc, -450
	add	ix, bc
	ld	(ix), de
	pop	ix
	lea	de, iy + 68
	push	ix
	ld	bc, -453
	add	ix, bc
	ld	(ix), de
	pop	ix
	lea	de, iy + 3
	ld	bc, -444
	lea	iy, ix
	add	iy, bc
	ld	(iy), de
	push	hl
	call	_time
	pop	de
	push	hl
	call	_srand
	pop	hl
	call	_gfx_Begin
	ld	hl, 2
	push	hl
	dec	hl
	push	hl
	call	_gfx_SetTextScale
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	bc, -453
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_create_deck
	pop	hl
	ld	bc, -453
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_shuffle_deck
	pop	hl
	ld	bc, -444
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	lea	hl, iy + 3
	ld	bc, -447
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	ld	(iy + 6), 0
	push	hl
	pop	de
	inc	de
	ld	bc, 61
	ldir
	ld	hl, 8
	ld	bc, -447
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	ld	(iy + 3), hl
	ld	de, 67
BB6_1:
	ld	bc, -450
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	or	a, a
	sbc	hl, de
	jr	z, BB6_3
	ld	bc, -450
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	push	de
	pop	bc
	ld	(ix - 3), de
	ld	de, -444
	lea	iy, ix
	add	iy, de
	ld	iy, (iy)
	add	iy, bc
	scf
	sbc	hl, hl
	ld	(iy), hl
	ld	de, (ix - 3)
	ex	de, hl
	ld	de, 67
	ld	bc, 7
	add	hl, bc
	ld	bc, -450
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	jr	BB6_1
BB6_3:
	ld	bc, -447
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	or	a, a
	sbc	hl, hl
	ld	(iy), hl
	ld	bc, -444
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	lea	de, iy + 15
	ld	bc, -473
	lea	iy, ix
	add	iy, bc
	ld	(iy), de
	push	ix
	ld	bc, -460
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	ix
	ld	bc, -457
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	hl
	pop	de
	inc	l
BB6_4:
	ld	a, l
	and	a, 1
	bit	0, a
	jp	z, BB6_37
	ld	bc, -450
	lea	iy, ix
	add	iy, bc
	ld	(iy), de
	push	ix
	ld	bc, -454
	add	ix, bc
	ld	(ix), l
	pop	ix
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	call	_kb_Scan
	ld	bc, -447
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld	de, (iy + 6)
	ld	bc, (iy + 3)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB6_7
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	ld	bc, -447
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	push	de
	push	ix
	ld	bc, -453
	add	ix, bc
	ld	de, (ix)
	pop	ix
	push	de
	push	hl
	ld	bc, -444
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_draw_cards_to_hand
	pop	hl
	pop	hl
	pop	hl
	pop	hl
BB6_7:
	ld	hl, -720878
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	bc, -450
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	bc, 7
	call	__imulu
	push	hl
	pop	bc
	ld	(ix - 3), de
	ld	de, -444
	lea	iy, ix
	add	iy, de
	ld	iy, (iy)
	add	iy, bc
	push	ix
	ld	bc, -476
	add	ix, bc
	ld	(ix), iy
	pop	ix
	ld	(iy + 14), 1
	ld	de, (ix - 3)
	ld	bc, -463
	lea	iy, ix
	add	iy, bc
	ld	(iy), de
	ld	a, e
	bit	5, a
	jp	z, BB6_15
	ld	bc, -460
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	a, l
	bit	5, a
	jp	nz, BB6_15
	ld	de, -450
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	bc, 7
	call	__imulu
	push	hl
	pop	de
	ld	(ix - 3), bc
	ld	bc, -444
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	add	iy, de
	push	ix
	ld	bc, -460
	add	ix, bc
	ld	(ix), iy
	pop	ix
	ld	a, (iy + 15)
	ld	bc, -447
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	ld	de, (iy + 9)
	bit	0, a
	ld	bc, (ix - 3)
	jr	nz, BB6_12
	push	de
	pop	hl
	ld	bc, 5
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB6_12
	ld	bc, -460
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 15), 1
	ld	hl, 1
	jr	BB6_14
BB6_12:
	bit	0, a
	jr	z, BB6_15
	ld	bc, -460
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 15), 0
	push	de
	pop	hl
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	ld	hl, -1
	jp	m, BB6_15
BB6_14:
	add	hl, de
	ld	bc, -447
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	ld	(iy + 9), hl
BB6_15:
	ld	hl, -720874
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	bc, -466
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	a, l
	bit	7, a
	ld	bc, -450
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	de, (hl)
	jp	z, BB6_25
	ld	bc, -457
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	a, l
	bit	7, a
	jr	nz, BB6_25
	ld	bc, -447
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld	de, (iy + 3)
	ld	iy, (iy + 6)
	push	de
	pop	hl
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB6_19
	ld	de, 0
BB6_19:
	ld	bc, -473
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	lea	bc, iy
	push	hl
	pop	iy
BB6_20:
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB6_24
	bit	0, (iy)
	jr	z, BB6_23
	scf
	sbc	hl, hl
	ld	(iy - 4), hl
	ld	(iy), 0
	ld	(iy - 1), 0
	dec	bc
BB6_23:
	lea	iy, iy + 7
	dec	de
	jr	BB6_20
BB6_24:
	ld	de, -447
	lea	hl, ix
	add	hl, de
	ld	iy, (hl)
	ld	(iy + 6), bc
	or	a, a
	sbc	hl, hl
	ld	(iy + 9), hl
	ld	bc, -450
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
BB6_25:
	ld	hl, -720866
	ld	c, (hl)
	inc	hl
	ld	b, (hl)
	ld	a, c
	bit	1, a
	jr	z, BB6_30
	ld	(ix - 3), bc
	ld	bc, -470
	lea	hl, ix
	add	hl, bc
	bit	1, (hl)
	ld	bc, (ix - 3)
	jr	nz, BB6_30
	push	de
	pop	hl
	push	de
	pop	iy
	ld	de, 1
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB6_29
	dec	iy
	lea	de, iy
	ld	(ix - 3), bc
	ld	bc, -476
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld	(iy + 14), 0
	ld	bc, (ix - 3)
	jr	BB6_30
BB6_29:
	lea	de, iy
BB6_30:
	ld	a, c
	bit	2, a
	ld	(ix - 3), bc
	ld	bc, -450
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	(hl), de
	ld	bc, (ix - 3)
	ld	de, -469
	lea	iy, ix
	push	af
	add	iy, de
	pop	af
	ld	(iy), bc
	jr	z, BB6_34
	ld	bc, -470
	lea	hl, ix
	add	hl, bc
	bit	2, (hl)
	jr	nz, BB6_34
	ld	bc, -447
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld	de, (iy + 3)
	ld	(ix - 3), de
	ld	de, -450
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	ld	de, (ix - 3)
	dec	de
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB6_34
	push	bc
	pop	de
	inc	de
	push	bc
	pop	hl
	ld	bc, 7
	call	__imulu
	push	hl
	pop	bc
	ld	(ix - 3), de
	ld	de, -444
	lea	iy, ix
	add	iy, de
	ld	iy, (iy)
	add	iy, bc
	ld	(iy + 14), 0
	ld	de, (ix - 3)
	ld	bc, -450
	lea	iy, ix
	add	iy, bc
	ld	(iy), de
BB6_34:
	ld	bc, -444
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_display_hand
	pop	hl
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	6, a
	jr	z, BB6_36
	xor	a, a
	ld	bc, -454
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
BB6_36:
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
	ld	(ix - 3), bc
	ld	bc, -463
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	ld	bc, (ix - 3)
	ld	c, e
	ld	b, d
	push	ix
	ld	de, -460
	add	ix, de
	ld	(ix), bc
	pop	ix
	ex	de, hl
	ld	bc, -466
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	e, l
	ld	d, h
	ld	bc, -457
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	call	_gfx_SwapDraw
	ld	bc, -469
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	dec	bc
	lea	iy, ix
	add	iy, bc
	ld	(iy), l
	ld	bc, -454
	lea	hl, ix
	add	hl, bc
	ld	l, (hl)
	push	ix
	ld	bc, -450
	add	ix, bc
	ld	de, (ix)
	pop	ix
	jp	BB6_4
BB6_37:
	call	_gfx_End
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	ident	"clang version 15.0.0 (https://github.com/CE-Programming/llvm-project 23b78267b5d376b232475d0805a937e54b61e0d0)"
	extern	__Unwind_SjLj_Register
	extern	_gfx_PrintChar
	extern	__frameset
	extern	_srand
	extern	_gfx_Begin
	extern	_kb_Scan
	extern	_rand
	extern	__ishru
	extern	__idivu
	extern	_gfx_SwapDraw
	extern	__setflag
	extern	_gfx_FillScreen
	extern	__Unwind_SjLj_Unregister
	extern	__irems
	extern	__imulu
	extern	_gfx_SetColor
	extern	_gfx_End
	extern	__frameset0
	extern	_gfx_SetTextXY
	extern	_time
	extern	__bdivu
	extern	_gfx_SetTextScale
