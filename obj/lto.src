	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_randomIntRange
_randomIntRange:
	call	__frameset0
	call	_rand
	push	hl
	pop	de
	ld	hl, 1
	ld	bc, (ix + 6)
	or	a, a
	sbc	hl, bc
	push	hl
	pop	iy
	ld	bc, (ix + 9)
	add	iy, bc
	ex	de, hl
	lea	bc, iy
	call	__irems
	ld	de, (ix + 6)
	add	hl, de
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_shuffle_deck
_shuffle_deck:
	ld	hl, -17
	call	__frameset
	ld	iy, (ix + 6)
	ld	bc, 5
	lea	hl, ix - 5
	ld	(ix - 11), hl
	ld	de, 260
	lea	hl, iy
	add	hl, de
	ld	de, (hl)
	push	de
	pop	hl
	call	__imulu
	push	de
	pop	bc
	push	hl
	pop	de
	add	iy, de
	lea	hl, iy - 5
	ld	(ix - 8), hl
	ld	de, 2
BB1_1:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB1_3
	push	bc
	pop	hl
	dec	hl
	ld	(ix - 14), hl
	ld	(ix - 17), bc
	call	_rand
	ld	bc, (ix - 17)
	call	__irems
	ld	(ix - 17), hl
	ld	de, (ix - 11)
	ld	hl, (ix - 8)
	ld	iy, 5
	lea	bc, iy
	ldir
	ld	hl, (ix - 17)
	lea	bc, iy
	call	__imulu
	push	hl
	pop	de
	ld	iy, (ix + 6)
	add	iy, de
	ld	de, (ix - 8)
	lea	hl, iy
	ld	bc, 5
	ldir
	lea	de, iy
	ld	hl, (ix - 11)
	ld	bc, 5
	ldir
	ld	de, 2
	ld	iy, (ix - 8)
	lea	iy, iy - 5
	ld	(ix - 8), iy
	ld	bc, (ix - 14)
	jr	BB1_1
BB1_3:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_create_deck
_create_deck:
	ld	hl, -24
	call	__frameset
	ld	bc, (ix + 6)
	ld	iyl, 13
	ld	l, -13
	xor	a, a
	ld	de, -64
	ld	(ix - 6), de
	ld	de, 0
	inc	bc
	ld	(ix - 9), bc
	ld	bc, -13
	ld	(ix - 3), bc
BB2_1:
	ld	b, a
	ld	(ix - 13), b
	ld	c, iyl
	call	__bdivu
	ld	h, a
	ld	(ix - 12), hl
	ld	(ix - 19), de
	ex	de, hl
	ld	de, 13
	push	de
	pop	bc
	call	__idivu
	push	hl
	pop	iy
	ld	bc, 104
	call	__imulu
	ld	de, (ix - 6)
	ld	a, e
	sub	a, l
	lea	hl, iy
	ld	bc, 13
	call	__imulu
	push	hl
	pop	bc
	ld	hl, -12
	or	a, a
	sbc	hl, bc
	ld	(ix - 16), hl
	ld	de, (ix - 3)
	push	de
	pop	iy
	ld	bc, 13
	add	iy, bc
	push	de
	pop	hl
	ld	bc, 39
	or	a, a
	sbc	hl, bc
	jp	z, BB2_19
	ld	(ix - 24), a
	ld	bc, (ix - 12)
	mlt	bc
	ld	h, (ix - 13)
	ld	a, h
	ld	(ix - 23), bc
	add	a, c
	ld	l, a
	add	a, -11
	ld	c, a
	ld	(ix - 20), l
	ld	a, l
	cp	a, 8
	jr	nc, BB2_4
	lea	de, iy
	ld	a, h
	ld	hl, (ix - 23)
	add	a, l
	add	a, 50
	jr	BB2_9
BB2_4:
	ld	a, c
	ex	de, hl
	ld	de, (ix - 16)
	add	hl, de
	ld	bc, 17
	add	hl, bc
	ld	de, 3
	or	a, a
	sbc	hl, de
	jr	nc, BB2_6
	lea	de, iy
	ld	hl, 5327444
	ld	c, (ix - 24)
	call	__ishru
	ld	a, l
	jr	BB2_9
BB2_6:
	or	a, a
	ld	a, 75
	jr	z, BB2_8
	ld	a, 65
BB2_8:
	lea	de, iy
BB2_9:
	ld	iy, (ix - 9)
	ld	(iy - 1), a
	ex	de, hl
	ld	de, 13
	or	a, a
	sbc	hl, de
	ld	a, 83
	ld	bc, (ix - 19)
	ld	iy, (ix - 3)
	jr	c, BB2_14
	lea	hl, iy
	ld	de, 13
	or	a, a
	sbc	hl, de
	ld	a, 72
	jr	c, BB2_14
	lea	hl, iy
	ld	bc, -13
	add	hl, bc
	ld	de, 13
	or	a, a
	sbc	hl, de
	ld	a, 67
	jr	c, BB2_13
	ld	a, 68
BB2_13:
	ld	bc, (ix - 19)
BB2_14:
	ld	hl, (ix - 9)
	ld	(hl), a
	lea	hl, iy
	ld	de, (ix - 16)
	add	hl, de
	push	hl
	pop	iy
	ld	de, 27
	add	iy, de
	ld	de, -13
	or	a, a
	sbc	hl, de
	ld	hl, 11
	jr	z, BB2_16
	ld	hl, 10
BB2_16:
	ld	a, (ix - 20)
	cp	a, 8
	lea	de, iy
	jr	c, BB2_18
	ex	de, hl
BB2_18:
	ld	iy, (ix - 9)
	ld	(iy + 1), de
	inc	bc
	ld	hl, (ix - 3)
	inc	hl
	ld	(ix - 3), hl
	ld	a, (ix - 13)
	inc	a
	push	bc
	pop	de
	ld	bc, 8
	ld	hl, (ix - 6)
	add	hl, bc
	ld	(ix - 6), hl
	lea	iy, iy + 5
	ld	(ix - 9), iy
	ld	iyl, 13
	ld	hl, (ix - 12)
	jp	BB2_1
BB2_19:
	ld	de, 260
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	add	iy, de
	ld	de, 52
	ld	(iy), de
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_print_card
_print_card:
	ld	hl, -6
	call	__frameset
	ld	hl, _.str
	ld	de, 10
	lea	bc, ix - 3
	ld	(ix - 6), bc
	push	de
	push	de
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	a, (ix + 6)
	ld	l, a
	push	hl
	call	_gfx_PrintChar
	pop	hl
	ld	l, (ix + 7)
	push	hl
	call	_gfx_PrintChar
	pop	hl
	ld	hl, (ix + 8)
	push	hl
	ld	hl, _.str.1
	push	hl
	ld	hl, (ix - 6)
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 6)
	push	hl
	call	_gfx_PrintString
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_draw_cards_to_hand
_draw_cards_to_hand:
	ld	hl, -9
	call	__frameset
	ld	de, (ix + 9)
	ld	bc, 1
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB4_2
	ld	de, 0
BB4_2:
	ld	iy, (ix + 6)
	lea	hl, iy + 8
	ld	(ix - 6), hl
	or	a, a
	sbc	hl, hl
	push	de
	pop	iy
	push	hl
	pop	bc
BB4_3:
	push	bc
	pop	hl
	lea	de, iy
	or	a, a
	sbc	hl, de
	jp	z, BB4_14
	ld	(ix - 9), bc
	lea	bc, iy
	ld	(ix - 3), bc
BB4_5:
	ld	hl, (ix + 15)
	ld	hl, (hl)
	ld	de, 52
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB4_7
	or	a, a
	sbc	hl, hl
	ld	iy, (ix + 15)
	ld	(iy), hl
	ld	hl, (ix + 12)
	push	hl
	call	_shuffle_deck
	pop	hl
BB4_7:
	ld	hl, (ix + 6)
	ld	de, (hl)
	push	de
	pop	hl
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB4_9
	ld	de, 0
BB4_9:
	ld	iy, (ix - 6)
BB4_10:
	ld	bc, (ix - 3)
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB4_5
	ld	hl, (iy)
	ld	bc, -1
	or	a, a
	sbc	hl, bc
	jr	z, BB4_13
	lea	iy, iy + 5
	dec	de
	jr	BB4_10
BB4_13:
	lea	de, iy - 2
	ld	hl, (ix + 15)
	push	hl
	pop	iy
	ld	hl, (iy)
	push	hl
	pop	bc
	inc	bc
	ld	(iy), bc
	ld	bc, 5
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix + 12)
	add	hl, bc
	ld	bc, 5
	ldir
	ld	iy, (ix - 3)
	ld	bc, (ix - 9)
	inc	bc
	jp	BB4_3
BB4_14:
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	hl, (iy + 3)
	ld	de, (ix + 9)
	add	hl, de
	ld	(iy + 3), hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -335
	call	__frameset
	ld	bc, -318
	lea	iy, ix
	add	iy, bc
	ld	bc, -321
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	ld	hl, 0
	lea	de, iy + 49
	push	ix
	ld	bc, -327
	add	ix, bc
	ld	(ix), de
	pop	ix
	lea	de, iy + 3
	ld	bc, -324
	lea	iy, ix
	add	iy, bc
	ld	(iy), de
	push	hl
	call	_time
	pop	de
	push	hl
	call	_srand
	pop	hl
	call	_gfx_Begin
	ld	hl, 2
	push	hl
	push	hl
	call	_gfx_SetTextScale
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	bc, -327
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_create_deck
	pop	hl
	ld	bc, -327
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_shuffle_deck
	pop	hl
	ld	bc, -324
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	lea	hl, iy + 6
	ld	bc, -321
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	ld	(iy + 9), 0
	push	hl
	pop	de
	inc	de
	ld	bc, 39
	ldir
	ld	hl, 8
	ld	(iy + 3), hl
	ld	de, 0
	ld	(iy + 6), de
	ld	de, 48
	push	hl
	pop	iy
BB5_1:
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jr	z, BB5_3
	lea	bc, iy
	lea	de, iy
	ld	(ix - 3), de
	ld	de, -324
	lea	hl, ix
	add	hl, de
	ld	iy, (hl)
	add	iy, bc
	scf
	sbc	hl, hl
	ld	(iy), hl
	ld	de, (ix - 3)
	push	de
	pop	iy
	ld	de, 48
	ld	bc, 5
	add	iy, bc
	jr	BB5_1
BB5_3:
	or	a, a
	sbc	hl, hl
	ld	bc, -321
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	ld	(iy), hl
	xor	a, a
	ld	e, a
	ld	bc, -333
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	inc	l
BB5_4:
	ld	a, l
	and	a, 1
	bit	0, a
	jp	z, BB5_22
	ld	bc, -335
	lea	iy, ix
	add	iy, bc
	ld	(iy), e
	push	ix
	inc	bc
	add	ix, bc
	ld	(ix), l
	pop	ix
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	call	_kb_Scan
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	bc, -330
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	bc, -321
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld	de, (iy + 6)
	ld	bc, (iy + 3)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB5_7
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	ld	bc, -321
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	push	de
	push	ix
	ld	bc, -327
	add	ix, bc
	ld	de, (ix)
	pop	ix
	push	de
	push	hl
	ld	bc, -324
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_draw_cards_to_hand
	pop	hl
	pop	hl
	pop	hl
	pop	hl
BB5_7:
	ld	bc, -330
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	ld	a, e
	bit	1, a
	jr	nz, BB5_9
	ld	bc, -333
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	(ix - 3), de
	ld	de, -335
	lea	iy, ix
	add	iy, de
	ld	b, (iy)
	ld	de, (ix - 3)
	jr	BB5_14
BB5_9:
	ld	de, -335
	lea	hl, ix
	add	hl, de
	ld	b, (hl)
	bit	1, b
	ld	c, -1
	ld	a, c
	jr	z, BB5_11
	ld	a, 0
BB5_11:
	ld	de, -333
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	de, 1
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	l, c
	jp	p, BB5_13
	ld	l, 0
BB5_13:
	and	a, l
	ld	l, a
	ld	c, 23
	call	__ishl
	push	hl
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	de
	ld	(ix - 3), bc
	ld	bc, -333
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	add	hl, de
	push	ix
	ld	bc, -330
	add	ix, bc
	ld	de, (ix)
	pop	ix
	ld	bc, (ix - 3)
BB5_14:
	ld	a, e
	bit	2, a
	jr	z, BB5_19
	bit	2, b
	jr	nz, BB5_19
	ld	bc, -321
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	ld	de, (iy + 3)
	dec	de
	push	hl
	pop	bc
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	de, 1
	jp	m, BB5_18
	ld	de, 0
BB5_18:
	push	bc
	pop	hl
	add	hl, de
BB5_19:
	ld	de, -333
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	ld	bc, 5
	call	__imulu
	push	hl
	pop	de
	ld	(ix - 3), bc
	push	ix
	ld	bc, -324
	add	ix, bc
	ld	iy, (ix)
	pop	ix
	add	iy, de
	lea	hl, iy + 6
	push	de
	push	de
	ex	de, hl
	ld	hl, 0
	add	hl, sp
	ex	de, hl
	ld	bc, (ix - 3)
	ldir
	call	_print_card
	pop	hl
	pop	hl
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	6, a
	jr	z, BB5_21
	xor	a, a
	ld	bc, -334
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
BB5_21:
	call	_gfx_SwapDraw
	ld	bc, -330
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	e, l
	ld	bc, -334
	lea	hl, ix
	add	hl, bc
	ld	l, (hl)
	jp	BB5_4
BB5_22:
	call	_gfx_End
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	_.str
_.str:
	db	"Card: ", 0

	section	.rodata,"a",@progbits
	private	_.str.1
_.str.1:
	db	"%d", 0

	ident	"clang version 15.0.0 (https://github.com/CE-Programming/llvm-project 23b78267b5d376b232475d0805a937e54b61e0d0)"
	extern	__Unwind_SjLj_Register
	extern	_gfx_PrintChar
	extern	__frameset
	extern	_srand
	extern	_sprintf
	extern	_gfx_Begin
	extern	_kb_Scan
	extern	_rand
	extern	_gfx_PrintString
	extern	__ishru
	extern	__ishl
	extern	_gfx_SwapDraw
	extern	__idivu
	extern	__setflag
	extern	_gfx_FillScreen
	extern	__Unwind_SjLj_Unregister
	extern	__irems
	extern	__imulu
	extern	_gfx_SetColor
	extern	_gfx_PrintStringXY
	extern	_gfx_End
	extern	__frameset0
	extern	_time
	extern	__bdivu
	extern	_gfx_SetTextScale
